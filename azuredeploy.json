{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "adminUsername": {
            "defaultValue": "ubuntu",
            "minLength": 5,
            "type": "String",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "sshKeyData": {
            "minLength": 20,
            "type": "String",
            "metadata": {
                "description": "ssh Public Key to log on to the host"
            }
        },
        "HostDNSLabelPrefix": {
            "defaultValue": "harbor",
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Host."
            }
        },
        "externalHostname": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "only if using external DNS, specify the FQDN here, otherwise defaulting to hostname.azurestackdnslabel"
            }
        },
        "harborUsername": {
            "defaultValue": "admin",
            "minLength": 5,
            "type": "String",
            "metadata": {
                "description": "admin username for harbor"
            }
        },
        "caCert": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Your Root CA Cert for HTTPS SSL, required for DOcker Engine in no Mozilla CA"
            }
        },
        "hostCert": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Host cert for Harbor Host or wildcard san for Domain. if not present, a selfsigned cert will be generated"
            }
        },

        "certKey": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "for testing, use self signed certs, otherwise LetÂ´s Encrypt"
            }
        },
        "ubuntuOSVersion": {
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS"
            ],
            "type": "String",
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_F2s_v2",
                "Standard_DS3_v2"
            ],
            "type": "String",
            "metadata": {
                "description": "VM Size for Harbor"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },

        "accountname": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Storage Account for AzureStack, mandatory for registry on Sorage Account"
            }
        },
        "accountkey": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Storage Account Key AzureStack, mandatory for registry on Sorage Account"
            }
        },
        "container": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Storage Account Container AzureStack, mandatory for registry on Sorage Account"
            }
        },
        "azurestackdomain": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Storage Account Container AzureStack, mandatory for registry on Sorage Account"
            }
        },
        "rootCA": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "root CA for AzureStack, mandatory for registry on Sorage Account"
            }
        },
        "_artifactsLocation": {
            "defaultValue": "https://raw.githubusercontent.com/bottkars/201-azurestack-harbor-registry/master",
            "type": "String",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        }
    },
    "variables": {
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "DiagnosticsStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'salinuxvm')]",
        "DiagnosticsStorageAccountType": "Standard_LRS",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "nicName": "myVMNic",
        "addressPrefix": "10.110.0.0/16",
        "subnetName": "Subnet1",
        "subnetPrefix": "10.110.0.0/24",
        "publicIPAddressName": "myPublicIP",
        "publicIPAddressType": "Dynamic",
        "vmName": "harbor",
        "harbor_security_group_name": "harbor_nsg",
        "virtualNetworkName": "harborVNET",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "baseUri": "[parameters('_artifactsLocation')]",
        "filesToDownload": [
            "[concat(variables('baseUri'),  '/scripts/create_self_certs.sh')]",
            "[concat(variables('baseUri'),  '/scripts/deploy_base.sh')]",
            "[concat(variables('baseUri'),  '/scripts/deploy_docker.sh')]",
            "[concat(variables('baseUri'),  '/scripts/deploy_harbor.sh')]",
            "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "[variables('DiagnosticsStorageAccountType')]"
            },
            "tags": {
                "provisioner": "harbor_template_by_azurestackguy"
            },

            "kind": "Storage",
            "name": "[variables('DiagnosticsStorageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "tags": {
                "provisioner": "harbor_template_by_azurestackguy"
            },

            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('HostDNSLabelPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "tags": {
                "provisioner": "harbor_template_by_azurestackguy"
            },

            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "tags": {
                "provisioner": "harbor_template_by_azurestackguy"
            },

            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',  variables('harbor_security_group_name'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('harbor_security_group_name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "identity": {
                "type": "none"
            },
            "tags": {
                "Application": "Harbor Registry",
                "provisioner": "harbor_template_by_azurestackguy"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[reference('Microsoft.Resources/deployments/generate-customdata', '2015-01-01').outputs.customData.value]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "none",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty",
                            "caching": "none",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('DiagnosticsStorageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('DiagnosticsStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ]
        },
        {
            "name": "[variables('harbor_security_group_name')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "tags": {
                "provisioner": "harbor_template_by_azurestackguy"
            },
            "type": "Microsoft.Network/networkSecurityGroups",
            "properties": {
                "securityRules": [
                    {
                        "name": "https",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 205,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 204,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "generate-customdata",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUri'), '/generate-customdata.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "customData": {
                        "value": {
                            "ADMIN_USERNAME": "[parameters('adminUsername')]",
                            "LOCATION": "[parameters('location')]",
                            "SSH_PUBLIC_KEY": "[parameters('sshkeyData')]",
                            "HARBOR_USERNAME": "[parameters('harborUsername')]",
                            "CA_CERT": "[parameters('caCert')]",
                            "HOST_CERT": "[parameters('hostCert')]",
                            "CERT_KEY": "[parameters('certKey')]",
                            "AZS_STORAGE_CONTAINER": "[parameters('container')]",
                            "AZS_CA": "[parameters('rootCA')]",
                            "AZS_STORAGE_ACCOUNT_KEY": "[parameters('accountkey')]",
                            "AZS_STORAGE_ACCOUNT_NAME": "[parameters('accountname')]",
                            "AZS_BASE_DOMAIN": "[parameters('azurestackdomain')]",
                            "FQDN": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]",
                            "EXTERNAL_HOSTNAME": "[parameters('externalHostname')]"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/initvm')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('filesToDownload')]",
                    "timestamp": 2
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash -l -c \"./deploy_base.sh 2>&1 | tee /home/', parameters('adminUsername'), '/install.log\"')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ]
        }
    ],
    "outputs": {
        "hostname": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        },
        "sshCommand": {
            "type": "String",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        }
    }
}